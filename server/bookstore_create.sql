-- MySQL Script generated by MySQL Workbench
-- Sat Apr 21 18:36:38 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Bookstore
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Bookstore
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Bookstore` DEFAULT CHARACTER SET utf8 ;
USE `Bookstore` ;

-- -----------------------------------------------------
-- Table `Bookstore`.`Book`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`Book` (
  `ISBN` CHAR(14) NOT NULL,
  `Title` TINYTEXT NOT NULL,
  `Author` TINYTEXT NOT NULL,
  `Edition` VARCHAR(4) NULL,
  `Year` INT NOT NULL,
  PRIMARY KEY (`ISBN`),
  UNIQUE INDEX `ISBN_UNIQUE` (`ISBN` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bookstore`.`Course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`Course` (
  `Subject` CHAR(4) NOT NULL,
  `Number` INT(4) NOT NULL,
  `Course Title` TINYTEXT NOT NULL,
  PRIMARY KEY (`Subject`, `Number`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bookstore`.`Professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`Professor` (
  `PID` INT NOT NULL,
  `Name` TINYTEXT NOT NULL,
  PRIMARY KEY (`PID`),
  UNIQUE INDEX `PID_UNIQUE` (`PID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bookstore`.`Offering`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`Offering` (
  `CRN` INT NOT NULL,
  `Semester` VARCHAR(12) NOT NULL,
  `Section` INT(2) NOT NULL,
  `Subject` CHAR(4) NOT NULL,
  `Number` INT(4) NOT NULL,
  `PID` INT NOT NULL,
  PRIMARY KEY (`CRN`, `Subject`, `Number`, `PID`),
  UNIQUE INDEX `CRN_UNIQUE` (`CRN` ASC),
  INDEX `fk_Offering_Course1_idx` (`Subject` ASC, `Number` ASC),
  INDEX `fk_Offering_Professor1_idx` (`PID` ASC),
  CONSTRAINT `fk_Offering_Course1`
    FOREIGN KEY (`Subject` , `Number`)
    REFERENCES `Bookstore`.`Course` (`Subject` , `Number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Offering_Professor1`
    FOREIGN KEY (`PID`)
    REFERENCES `Bookstore`.`Professor` (`PID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bookstore`.`Stock`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`Stock` (
  `New Price` DOUBLE NOT NULL,
  `New Stock` INT NOT NULL,
  `Used Price` DOUBLE NOT NULL,
  `Used Stock` INT NOT NULL,
  `Rent Price` DOUBLE NOT NULL,
  `Rent Stock` INT NOT NULL,
  `ISBN` CHAR(14) NOT NULL,
  INDEX `fk_Stock_Book1_idx` (`ISBN` ASC),
  CONSTRAINT `fk_Stock_Book1`
    FOREIGN KEY (`ISBN`)
    REFERENCES `Bookstore`.`Book` (`ISBN`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bookstore`.`Course_Books`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`Course_Books` (
  `CRN` INT NOT NULL,
  `ISBN` CHAR(14) NOT NULL,
  PRIMARY KEY (`CRN`, `ISBN`),
  INDEX `fk_Offering_has_Book_Book1_idx` (`ISBN` ASC),
  INDEX `fk_Offering_has_Book_Offering1_idx` (`CRN` ASC),
  CONSTRAINT `fk_Offering_has_Book_Offering1`
    FOREIGN KEY (`CRN`)
    REFERENCES `Bookstore`.`Offering` (`CRN`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Offering_has_Book_Book1`
    FOREIGN KEY (`ISBN`)
    REFERENCES `Bookstore`.`Book` (`ISBN`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `Bookstore`;

DELIMITER $$
USE `Bookstore`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Bookstore`.`Book_BEFORE_INSERT` BEFORE INSERT ON `Book` FOR EACH ROW
BEGIN
	IF(NEW.Edition IS NULL) THEN
		SET NEW.Edition = '1st';
	END IF;
END$$

USE `Bookstore`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Bookstore`.`Book_AFTER_DELETE` AFTER DELETE ON `Book` FOR EACH ROW
BEGIN
	DELETE FROM Stock WHERE Stock.ISBN = old.ISBN;
    UPDATE course_books SET ISBN = "000-0000000000" WHERE ISBN = old.ISBN;
END$$

USE `Bookstore`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Bookstore`.`Offering_BEFORE_INSERT` BEFORE INSERT ON `Offering` FOR EACH ROW
BEGIN
	IF (NEW.PID IS NULL) OR (NEW.PID NOT IN (SELECT Professor.PID FROM Professor)) THEN
		SET NEW.PID = "000000";
	END IF;
END$$

USE `Bookstore`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Bookstore`.`Offering_AFTER_DELETE` AFTER DELETE ON `Offering` FOR EACH ROW
BEGIN
	DELETE FROM course_books WHERE CRN = Old.CRN;
END$$

USE `Bookstore`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Bookstore`.`Course_Books_BEFORE_INSERT` BEFORE INSERT ON `Course_Books` FOR EACH ROW
BEGIN
	IF (NEW.ISBN IS NULL) OR (NEW.ISBN NOT IN (SELECT Book.ISBN FROM Book)) THEN
		SET NEW.ISBN = "000-0000000000";
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
